(a)
二分木のノードを表すBinaryTreeNode：【具象クラス】

<理由>
BinaryTreeNodeのメソッドとして、関連付けられたオブジェクトを返すメソッド、
親ノードを返すメソッド、子ノードのリストを返すメソッド、子ノードの数を返す
メソッドが考えられる。
木構造の種類を二分木とすることで、これらのメソッドを実装することが可能であり、
抽象メソッドを定義する必要がなくなる。


(b)
深さ優先で二分木を探索するDepthFirstTreeWalker：【具象クラス】

<理由>
DepthFirstTreeWalkerのメソッドとして、指定した要素が存在するか調べるメソッド
や、指定した順番の要素を返すメソッドが考えられる。
木構造の種類を二分木とし、探索方法を深さ優先とすることで、これらのメソッドを
実装することが可能であり、抽象メソッドを定義する必要がなくなる。


(c)

<理由>
BitmapオブジェクトのためのBitmapDrawable：【具象クラス】
描画するオブジェクトをBitmapオブジェクトのみとすることで、描画を行うメソッド
を実装することが可能であり、抽象メソッドを定義する必要がなくなる。


(d)
グラフィックデスクトップまたはコマンドから実行できるプログラムのためのApplication：【抽象クラス】

<理由>
アプリケーションを起動するためのエントリポイントが2つに分かれるため、起動する
ためのためのメソッドを抽象メソッドとする必要が生じる。
ただし、起動メソッド以外のメソッドは実装できるため、インタフェースではなく抽象
クラスとするのが適切である。
